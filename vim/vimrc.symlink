set t_Co=256
let g:jellybeans_overrides = {
      \    'Todo': { 'guifg': '303030', 'guibg': 'f0f000',
      \              'ctermfg': 'Black', 'ctermbg': 'Yellow',
      \              'attr': 'bold' },
      \}
let g:jellybeans_use_lowcolor_black = 0
colorscheme jellybeans "需要把http://www.vim.org/scripts/script.php?script_id=2555存入~/.vim/colors

set autoindent noexpandtab tabstop=2 shiftwidth=2

set hlsearch "设置搜索所有匹配高亮
"set dictionary+=$HOME/.mydict
"set dictionary+=/usr/share/dict/words
set isk+=- "把-分割的单词视为一个整体
set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936
set cindent
set sw=2
set ts=2
set expandtab
set number                     " 行号
syntax on                      " 语法高亮

":hi colorcolumn guibg=lightgreen
"set cc=81
set backspace=2 " make backspace work like most other apps

let mapleader=','
nnoremap < v<
nnoremap > v>
vnoremap < <gv
vnoremap > >gv

" https://superuser.com/questions/321547/how-do-i-replace-paste-yanked-text-in-vim-without-yanking-the-deleted-lines
vnoremap <leader>p "_dP

map <F2> :%s/\r*//g<cr>:%s/\s*$//g<cr>:noh<cr>   "先清除^M,然后移除行尾空格
set pastetoggle=<F3>               "插入模式下转换粘贴模式
map <F4> :let &number=1-&number<CR>"显隐行号
"map <F5> :Tlist<cr>                "显隐列表
map <F5> :NERDTreeToggle<cr> "显隐Nerdtree
"下面这个不能有注释
map <F6> :Gblame<cr>
map <F7> :Align =<cr>                "对其当前块等号
map <F8> :Dash<cr>                   "Dash 查找
"nnoremap <F9> :silent update<Bar>silent !google-chrome %:p &<CR> "ubuntu在chrome中打开文件
"mac在chrome中打开文件
nnoremap <F9> :silent update<Bar>!open -a Google\ Chrome %<CR>

nmap ]h <Plug>GitGutterNextHunk
nmap [h <Plug>GitGutterPrevHunk

"set cursorline "高亮光标所在行
let Tlist_Use_Right_Window=1 "方法列表放在屏幕的右侧
"let Tlist_Auto_Open=1       "自动打开方法列表

"set list "把制表符显示为^I,用$标示行尾（使用list分辨尾部的字符是tab还是空格）
set list
"set listchars=tab:,.,trail:.,extends:#,nbsp:. " Highlight problematic whitespace
let &listchars="tab:\uBB\uBB,trail:\uB7,nbsp:~" "更好的空白高亮
augroup golang
  autocmd BufRead *.go set nolist "Golang 空白不高亮
augroup END

function! SearchWord(word)
    let @/ = '\<' . a:word . '\>'
    normal n
endfunction
command! -nargs=1 SearchWord call SearchWord(<f-args>)
nmap ? :SearchWord


"""""""""""""""""""Vundle"""""""""""""""""""""""""""""""""
set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

" My Plugins here:
Plugin 'Lokaltog/vim-easymotion'
map <Leader><Leader>f <Plug>(easymotion-w)
map <Leader><Leader>j <Plug>(easymotion-j)
map <Leader><Leader>k <Plug>(easymotion-k)
map <Leader><leader>h <Plug>(easymotion-linebackward)
map <Leader><leader>l <Plug>(easymotion-lineforward)

Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
Plugin 'tpope/vim-rails.git'

Plugin 'L9'
Plugin 'FuzzyFinder'
Plugin 'kien/ctrlp.vim'
Plugin 'vim-scripts/snipMate'
"Plugin 'mattn/zencoding-vim'
Plugin 'mattn/emmet-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'mileszs/ack.vim'
Plugin 'tyok/nerdtree-ack'
Plugin 'groenewege/vim-less'
Plugin 'kchmck/vim-coffee-script'
"Plugin 'slim-template/vim-slim'

Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_new_list_item_indent = 0

Plugin 'eikenberry/acp'
Plugin 'nginx.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-scripts/taglist.vim'
"Plugin 'edsono/vim-matchit'
"Plugin 'vim-scripts/ruby-matchit'
"Plugin 'mhinz/vim-signify'
Plugin 'airblade/vim-gitgutter'
Plugin 'vim-scripts/Align'
Plugin 'tomtom/tcomment_vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'skalnik/vim-vroom'
Plugin 'pangloss/vim-javascript'
Plugin 'heavenshell/vim-jsdoc'

Plugin 'ruanyl/vim-fixmyjs'
let g:fixmyjs_rc_path = '~/.eslintrc.js'

Plugin 'mkitt/tabline.vim'
nnoremap H gT
nnoremap L gt
" hi TabLine      ctermfg=Black  ctermbg=Green     cterm=NONE
" hi TabLineFill  ctermfg=Black  ctermbg=Green     cterm=NONE
" hi TabLineSel   ctermfg=White  ctermbg=DarkBlue  cterm=NONE

"Plugin 'git://github.com/Lokaltog/vim-powerline.git' " 这个插件废弃了
"let g:Powerline_symbols = 'fancy'
"let Powerline_symbols = 'compatible'

Plugin 'vim-airline/vim-airline' " vim-powerline 不支持ale, vim-airline支持
set laststatus=2 "始终显示状态栏
"let g:airline#extensions#tabline#enabled = 1 " 和tabline.vim 冲突
let g:airline_powerline_fonts=1

" 以下这些都不需要, 其实关键是设置itme2的2个部分字体
" set guifont=Source\ Code\ Pro\ for\ Powerline
" if !exists('g:airline_symbols')
"   let g:airline_symbols = {}
" endif
" " unicode symbols
" let g:airline_left_sep = '»'
" let g:airline_left_sep = '▶'
" let g:airline_right_sep = '«'
" let g:airline_right_sep = '◀'
" let g:airline_symbols.crypt = '🔒'
" let g:airline_symbols.linenr = '␊'
" let g:airline_symbols.linenr = '␤'
" let g:airline_symbols.linenr = '¶'
" let g:airline_symbols.maxlinenr = '☰'
" let g:airline_symbols.maxlinenr = ''
" let g:airline_symbols.branch = '⎇'
" let g:airline_symbols.paste = 'ρ'
" let g:airline_symbols.paste = 'Þ'
" let g:airline_symbols.paste = '∥'
" let g:airline_symbols.spell = 'Ꞩ'
" let g:airline_symbols.notexists = '∄'
" let g:airline_symbols.whitespace = 'Ξ'
"
Plugin 'w0rp/ale'
let g:ale_echo_msg_format = '%linter% %s'
let g:ale_sign_column_always = 1
"let g:ale_sign_error  = '⚡'
let g:ale_sign_warning = '⚠️'
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
let g:ale_linters = {
      \   'javascript': ['eslint'],
      \   'ruby': ['rubocop'],
      \   'go': ['gofmt', 'golint', 'go vet' ],
      \}

"     \   'go': ['go build', 'gofmt', 'golint', 'gosimple', 'go vet', 'staticcheck'],
" TODO
"      \   'go': ['gometalinter'],
" let g:ale_go_gometalinter_options = "--config=~/.dotfiles/nodejs/gometalinter.json.symlink"
let g:ale_yaml_yamllint_options = "-c ~/.dotfiles/yaml/yamllint.yaml.symlink"


"set statusline+=%{ALEGetStatusLine()}   " 自动被vim-powerline展示在最后,不用设置
"let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok'] "对vim-airline不起作用

"Plugin 'scrooloose/syntastic' " can not open maven project
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"let g:syntastic_error_symbol = '❌'
"let g:syntastic_style_error_symbol = '⁉️'
"let g:syntastic_warning_symbol = '⚠️'
"let g:syntastic_style_warning_symbol = '💩'
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0
"let g:syntastic_ruby_checkers = ['rubocop']
"let g:syntastic_javascript_checkers = ['eslint']
"let g:syntastic_javascript_eslint_args = "-c ~/.eslintrc.js"

Plugin 'rizzatti/dash.vim' " only for mac

Plugin 'fatih/vim-go'
" map <C-b> :cnext<CR>
" map <C-m> :cprevious<CR>
" nnoremap <leader>a :cclose<CR>

Plugin 'nsf/gocode', {'rtp': 'vim/'}

call vundle#end()             " vundle required!
filetype plugin indent on     " vundle required!


" 关闭NERDTree快捷键
"map <leader>t :NERDTreeToggle<CR> "F5代替
" 显示行号
let NERDTreeShowLineNumbers=1
let NERDTreeAutoCenter=1
" 是否显示隐藏文件
let NERDTreeShowHidden=1
" 设置宽度
let NERDTreeWinSize=31
" 在终端启动vim时，自动打开NERDTree, 但是貌似没用
let g:nerdtree_tabs_open_on_console_startup=1
" 忽略一下文件的显示
let NERDTreeIgnore=['\.pyc','\~$']
" 显示书签列表
let NERDTreeShowBookmarks=1

"go get -u github.com/jstemmer/gotags
"brew install ctags-exuberant
Plugin 'majutsushi/tagbar'
nmap <F10> :TagbarToggle<CR>
let g:tagbar_type_go = {
	\ 'ctagstype' : 'go',
	\ 'kinds'     : [
		\ 'p:package',
		\ 'i:imports:1',
		\ 'c:constants',
		\ 'v:variables',
		\ 't:types',
		\ 'n:interfaces',
		\ 'w:fields',
		\ 'e:embedded',
		\ 'm:methods',
		\ 'r:constructor',
		\ 'f:functions'
	\ ],
	\ 'sro' : '.',
	\ 'kind2scope' : {
		\ 't' : 'ctype',
		\ 'n' : 'ntype'
	\ },
	\ 'scope2kind' : {
		\ 'ctype' : 't',
		\ 'ntype' : 'n'
	\ },
	\ 'ctagsbin'  : 'gotags',
	\ 'ctagsargs' : '-sort -silent'
\ }

Plugin 'diepm/vim-rest-console'
au! BufNewFile,BufRead *.rest set filetype=rest
let g:vrc_show_command = 1
let g:vrc_debug = 1
let g:vrc_output_buffer_name = '__VRC_OUTPUT.<filetype>'
